
version: '3.7'

services:
  postgres:
    container_name: sharedspoons-db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/1.schema.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/2.data.sql

  backend:
    container_name: sharedspoons-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - "3010:3010"
    depends_on:
      - postgres

  nginx:
    container_name: sharedspoons-nginx
    build:
      context: ./nginx  # Pointing to the nginx directory
      dockerfile: Dockerfile
      args:
        SSL_CERT_NAME: ${SSL_CERT_NAME}
        SSL_KEY_NAME: ${SSL_KEY_NAME}
    ports:
      - "80:80"
      - "443:443"
    environment:
      SSL_CERT_NAME: ${SSL_CERT_NAME}
      SSL_KEY_NAME: ${SSL_KEY_NAME}
    depends_on:
      - backend

volumes:
  postgres_data:

